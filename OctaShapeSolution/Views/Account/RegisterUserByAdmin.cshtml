@model OctaShapeSolution.Models.RegisterUserViewModel

@{
    ViewBag.Title = "Register User";

    if (Convert.ToBoolean(Session["IsAdmin"]) == true)
    {
        Layout = "~/Views/Shared/_AdminLayout.cshtml";

    }
    else
    {
        Layout = "~/Views/Shared/_UserLayout.cshtml";
    }
}



    <title>@ViewBag.Title</title>


    




    <div id="page-wrapper">
        @{
            if (ViewBag.Result != null)
            {
                <div class="container col-lg-8">

                    <div class="alert alert-success fade in">
                        <button data-dismiss="alert" class="close close-sm" type="button">
                            <i class="icon-remove"></i>
                        </button>
                        <strong>Thank You , @ViewBag.Result</strong>

                    </div>


                </div>

            }
        }
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">Register New User</h1>
            </div>
            <!-- /.col-lg-12 -->
        </div>
        <!-- /.row -->
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">

                    </div>
                    <div class="panel-body">
                        <div class="row">

                            <div class="col-lg-6">

                                @using (Html.BeginForm())
                                {
                                    @Html.AntiForgeryToken()


                                    <div class="form-horizontal">

                                        <hr />
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="form-group">
                                            @Html.LabelFor(model => model.BranchCode, "BranchCode", htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.DropDownList("BranchCode", null, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                            </div>
                                        </div>



                                        <div class="form-group">
                                            <div class="col-md-offset-7 col-md-7">
                                                <input type="submit" value="Create" class="btn btn-primary" />
                                            </div>
                                        </div>
                                    </div>


                                }

                            </div>
                            <!-- /.col-lg-6 (nested) -->
                            <div class="col-lg-6">

                            </div>
                            <!-- /.col-lg-6 (nested) -->
                        </div>
                        <!-- /.row (nested) -->
                    </div>
                    <!-- /.panel-body -->
                </div>
                <!-- /.panel -->
            </div>
            <!-- /.col-lg-12 -->
        </div>
        <!-- /.row -->
    </div>
